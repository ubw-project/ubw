/********* BEGIN GoldSmartContractBank ******/
contract GoldSmartContractBank{
	address admin;
	
	event CreatedUser(address indexed user, string username, string metaData);
	event CreatedUnverifiedUser(address indexed user);
	event VerifiedUser(address indexed user, string username, string metaData);
	event Deposited(address indexed user, string instrument, uint value);
	event Transfered(address indexed from, string instrument, address recipient, uint value);
	event BurnRequested(address indexed user, string instrument, uint value);
	event BurnCancelled(address indexed user, string instrument, uint value);
	event Burned(address indexed user, string instrument, uint value);

	function GoldSmartContractBank(){
		admin = msg.sender;
	}
	
	modifier onlyadmin { if (msg.sender == admin) _; }

	struct UserInfo{		
		string username;
		string metaData;
		bool verified;
		bool initialized;
	}

	struct InstrumentInfo{		
		string metaData;		
		bool initialized;
	}

	struct UserBalance{
		mapping (string => uint) balance;
	}

	struct BurnRequest{
		mapping (string => uint) brqBalance;
	}

	mapping (address => UserInfo) public users;
	mapping (string => InstrumentInfo) GSCInstruments;
	mapping (address => UserBalance)  GSCBalance;
	mapping (address => BurnRequest) burnRequestBalance;


	// this is called to change the admin
	function changeAdmin(address _newAdminAddr) onlyadmin returns (bool) {
		admin = _newAdminAddr;
	}

	//************* FUNCTIONALITY RELATING TO USERs ****************//
	// this function creates and registers a new user to the contract
	// return code: 
	// - false, the address is already registered
	// - true, successfully created
	function createUser (address newAddr, string username, string metaData) onlyadmin returns (bool) 
	{
		if (ifExists(newAddr))
			return false;
		users[newAddr] = UserInfo(username, metaData, true, true);
		CreatedUser(newAddr, username, metaData);
		return true;
	}

	function getUserInfo (address userAddr) public constant returns (string, string, bool)
	{
		if (!ifExists(userAddr))
			return ("false", "false", false);
		return (users[userAddr].username, users[userAddr].metaData, users[userAddr].verified);
	}

	/** this function allows anyone to create a new user on the fly without any registration/ verification
	* with  DinarDirham
	* The registration/ verification can be done later.
	* Unverified user can only receive DNC/GSC
	*/
	function createUnverifiedUser (address _newAddr) onlyadmin returns (bool)
	{
		if (ifExists(_newAddr))
			return false;
		
		users[_newAddr].initialized = true;
		users[_newAddr].verified 	= false;
		CreatedUnverifiedUser(_newAddr);
		return true;
	}

	// this is to verify existing users
	function verifyUser(address userAddr, string username, string metaData) onlyadmin returns (bool)
	{
		if (ifExists(userAddr) && !users[userAddr].verified){
			users[userAddr].verified = true;
			users[userAddr].username = username;
			users[userAddr].metaData = metaData;
			VerifiedUser(userAddr, username, metaData);
			return true;
		}
		return false;
	}

	/*
	* Check if a user exists
	*/
	function ifExists (address userAddr) public constant returns (bool)
	{
		return users[userAddr].initialized;			
	}

	/*
	* Check if a user is verified
	*/
	function ifVerified (address userAddr) public constant returns (bool)
	{
		return (ifExists(userAddr) && users[userAddr].verified);
	}
	
	//************* INSTRUMENT FUNCTIONALITY ****************//

	//  Check if an instrument exists	
	function ifInstrumentExists (string denomination) public constant returns (bool)
	{
		return GSCInstruments[denomination].initialized;			
	}

	function createNewInstrument(string denomination, string metaData) onlyadmin returns (bool)
	{
		if (ifInstrumentExists(denomination))
			return false;
		GSCInstruments[denomination].metaData 	 = metaData;
		GSCInstruments[denomination].initialized = true;
		return true;
	}

	function getInstrumentInfo(string denomination) public constant returns (string)
	{
		if (!ifInstrumentExists(denomination))
			return "Does not exist";
		return GSCInstruments[denomination].metaData;
	}

	//************* GSC FUNCTIONALITY ****************//	
	/*
	* This is called when users mint new GSC.
	* This function is triggered by admin only
	*/
	function mintNewGSC(address user, string instrument,  uint quantity) onlyadmin returns (bool) 
	{
		if (!ifExists(user))
			return false;
		if (!ifInstrumentExists(instrument))
			return false;
		GSCBalance[user].balance[instrument] += quantity;
		Deposited(user, instrument, quantity);
		return true;
	}

	// only verified users can transfer their DNC
	function transfer (address sender, address recipient, string instrument, uint quantity) onlyadmin returns (bool)
	{				
		if (!ifVerified(sender))
			return false;
		if (!ifInstrumentExists(instrument))
			return false;		
		if (GSCBalance[sender].balance[instrument] < quantity)
			return false;
		if (!ifExists(recipient))
			createUnverifiedUser(recipient);
		GSCBalance[sender].balance[instrument] -= quantity;
		GSCBalance[recipient].balance[instrument] += quantity;
		Transfered(sender, instrument, recipient, quantity);
		return true;
	}

	function getBalance (address user, string instrument) public constant returns (uint)
	{
		if (!ifInstrumentExists(instrument))
			return 0;
		return GSCBalance[user].balance[instrument];
	}
	
	function burn(address user, string instrument, uint quantity) onlyadmin returns (bool) {
	    if(!ifVerified(user))
	        return false;
	    if(!ifInstrumentExists(instrument))
	        return false;
	    if(GSCBalance[msg.sender].balance[instrument] < quantity)
	        return false;
	        
	    GSCBalance[msg.sender].balance[instrument] -= quantity;
	    Burned(user,instrument, quantity);
	    return true;
	}
}
///******

////******
// goldsmartcontractbankContract = web3.eth.contract([{"constant":true,"inputs":[{"name":"user","type":"address"},{"name":"instrument","type":"string"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_newAddr","type":"address"}],"name":"createUnverifiedUser","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"newAddr","type":"address"},{"name":"username","type":"string"},{"name":"metaData","type":"string"}],"name":"createUser","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"userAddr","type":"address"}],"name":"getUserInfo","outputs":[{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"denomination","type":"string"},{"name":"metaData","type":"string"}],"name":"createNewInstrument","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"userAddr","type":"address"}],"name":"ifVerified","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"instrument","type":"string"},{"name":"quantity","type":"uint256"}],"name":"depositNewGNC","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"userAddr","type":"address"},{"name":"username","type":"string"},{"name":"metaData","type":"string"}],"name":"verifyUser","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"denomination","type":"string"}],"name":"ifInstrumentExists","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_newAdminAddr","type":"address"}],"name":"changeAdmin","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"denomination","type":"string"}],"name":"getInstrumentInfo","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"users","outputs":[{"name":"username","type":"string"},{"name":"metaData","type":"string"},{"name":"verified","type":"bool"},{"name":"initialized","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"instrument","type":"string"},{"name":"quantity","type":"uint256"}],"name":"burn","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"userAddr","type":"address"}],"name":"ifExists","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"instrument","type":"string"},{"name":"quantity","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"username","type":"string"},{"indexed":false,"name":"metaData","type":"string"}],"name":"CreatedUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"}],"name":"CreatedUnverifiedUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"instrument","type":"string"},{"indexed":false,"name":"metaData","type":"string"}],"name":"CreatedInstrument","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"username","type":"string"},{"indexed":false,"name":"metaData","type":"string"}],"name":"VerifiedUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"instrument","type":"string"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"instrument","type":"string"},{"indexed":false,"name":"recipient","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"instrument","type":"string"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Burned","type":"event"}]);
// goldsmartcontractbank = goldsmartcontractbankContract.new(
//    {
//      from: web3.eth.accounts[0], 
//      data: '60606040525b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b6120508061003f6000396000f3606060405236156100d7576000357c0100000000000000000000000000000000000000000000000000000000900480631dd7cecf146100d957806348725fd81461014c5780634ceb48fd1461017a5780636386c1c7146102365780636cf787ed146103225780636d42eee2146103d557806376783ce71461040357806378c188c51461048157806384eee8f11461053d5780638f283970146105a95780639b7afeed146105d7578063a87430ba14610699578063b48272cc146107e2578063f93edb9e14610857578063fff3a01b14610885576100d7565b005b6101366004808035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610903565b6040518082815260200191505060405180910390f35b610162600480803590602001909190505061099c565b60405180821515815260200191505060405180910390f35b61021e6004808035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610af2565b60405180821515815260200191505060405180910390f35b61024c6004808035906020019091905050610e73565b60405180806020018060200184151581526020018381038352868181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156102b85780820380516001836020036101000a031916815260200191505b508381038252858181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103115780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6103bd6004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050611123565b60405180821515815260200191505060405180910390f35b6103eb60048080359060200190919050506112ec565b60405180821515815260200191505060405180910390f35b6104696004808035906020019091908035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505090909190803590602001909190505061134b565b60405180821515815260200191505060405180910390f35b6105256004808035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050611510565b60405180821515815260200191505060405180910390f35b6105916004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506118e2565b60405180821515815260200191505060405180910390f35b6105bf6004808035906020019091905050611942565b60405180821515815260200191505060405180910390f35b61062b6004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506119cc565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f16801561068b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106af6004808035906020019091905050611b1c565b6040518080602001806020018515158152602001841515815260200183810383528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561074c5780601f106107215761010080835404028352916020019161074c565b820191906000526020600020905b81548152906001019060200180831161072f57829003601f168201915b50508381038252868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b5050965050505050505060405180910390f35b61083f6004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019091905050611b6d565b60405180821515815260200191505060405180910390f35b61086d6004808035906020019091905050611d5c565b60405180821515815260200191505060405180910390f35b6108eb6004808035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019091905050611daa565b60405180821515815260200191505060405180910390f35b600061090e826118e2565b151561091d5760009050610996565b600360005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005082604051808280519060200190808383829060006004602084601f0104600302600f01f1509050019150509081526020016040518091039020600050549050610996565b92915050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610aec576109fd82611d5c565b15610a0b5760009050610aed565b6001600160005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160016101000a81548160ff021916908302179055506000600160005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160006101000a81548160ff021916908302179055508173ffffffffffffffffffffffffffffffffffffffff167f530a5f323e127769d688ad6ca826e310dc00c55412ec6c9a436946013428021c60405180905060405180910390a260019050610aed565b5b919050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e6b57610b5384611d5c565b15610b615760009050610e6c565b608060405190810160405280848152602001838152602001600181526020016001815260200150600160005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000820151816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0c57805160ff1916838001178555610c3d565b82800160010185558215610c3d579182015b82811115610c3c578251826000505591602001919060010190610c1e565b5b509050610c689190610c4a565b80821115610c645760008181506000905550600101610c4a565b5090565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610cbf57805160ff1916838001178555610cf0565b82800160010185558215610cf0579182015b82811115610cef578251826000505591602001919060010190610cd1565b5b509050610d1b9190610cfd565b80821115610d175760008181506000905550600101610cfd565b5090565b505060408201518160020160006101000a81548160ff0219169083021790555060608201518160020160016101000a81548160ff021916908302179055509050508373ffffffffffffffffffffffffffffffffffffffff167ffc30328c5f25cc712e3d35ad22780db665c2bb3f7a1d56dd5d195f4103c9ca0b84846040518080602001806020018381038352858181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610dfa5780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610e535780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a260019050610e6c565b5b9392505050565b602060405190810160405280600081526020015060206040519081016040528060008152602001506000610ea684611d5c565b1515610f2f576000604060405190810160405280600581526020017f66616c736500000000000000000000000000000000000000000000000000000081526020015090604060405190810160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152602001509092509250925061111c565b600160005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600001600050600160005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600101600050600160005060008773ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160009054906101000a900460ff16828054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561106e5780601f106110435761010080835404028352916020019161106e565b820191906000526020600020905b81548152906001019060200180831161105157829003601f168201915b50505050509250818054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561110a5780601f106110df5761010080835404028352916020019161110a565b820191906000526020600020905b8154815290600101906020018083116110ed57829003601f168201915b5050505050915092509250925061111c565b9193909250565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156112e557611184836118e2565b1561119257600090506112e6565b81600260005084604051808280519060200190808383829060006004602084601f0104600302600f01f15090500191505090815260200160405180910390206000506000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061122357805160ff1916838001178555611254565b82800160010185558215611254579182015b82811115611253578251826000505591602001919060010190611235565b5b50905061127f9190611261565b8082111561127b5760008181506000905550600101611261565b5090565b50506001600260005084604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050908152602001604051809103902060005060010160006101000a81548160ff02191690830217905550600190506112e6565b5b92915050565b60006112f782611d5c565b801561133f5750600160005060008373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160009054906101000a900460ff165b9050611346565b919050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611508576113ac84611d5c565b15156113bb5760009050611509565b6113c4836118e2565b15156113d35760009050611509565b81600360005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005084604051808280519060200190808383829060006004602084601f0104600302600f01f15090500191505090815260200160405180910390206000828282505401925050819055508373ffffffffffffffffffffffffffffffffffffffff167ffd4bdef056842e4615d2a093647094c0b9bf67c63662d614d63fefd617e0add2848460405180806020018381526020018281038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156114f15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a260019050611509565b5b9392505050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156118da5761157184611d5c565b80156115ba5750600160005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160009054906101000a900460ff16155b156118d1576001600160005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160006101000a81548160ff0219169083021790555082600160005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061168757805160ff19168380011785556116b8565b828001600101855582156116b8579182015b828111156116b7578251826000505591602001919060010190611699565b5b5090506116e391906116c5565b808211156116df57600081815060009055506001016116c5565b5090565b505081600160005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061176457805160ff1916838001178555611795565b82800160010185558215611795579182015b82811115611794578251826000505591602001919060010190611776565b5b5090506117c091906117a2565b808211156117bc57600081815060009055506001016117a2565b5090565b50508373ffffffffffffffffffffffffffffffffffffffff167f5e94ea0b09d8008f36159078964948ee03c592796297bae00c2be459e9b0cb0684846040518080602001806020018381038352858181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156118605780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156118b95780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a2600190506118db565b600090506118db565b5b9392505050565b6000600260005082604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050908152602001604051809103902060005060010160009054906101000a900460ff16905061193d565b919050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156119c65781600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b5b919050565b60206040519081016040528060008152602001506119e9826118e2565b1515611a3057604060405190810160405280600e81526020017f446f6573206e6f742065786973740000000000000000000000000000000000008152602001509050611b17565b600260005082604051808280519060200190808383829060006004602084601f0104600302600f01f15090500191505090815260200160405180910390206000506000016000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b0b5780601f10611ae057610100808354040283529160200191611b0b565b820191906000526020600020905b815481529060010190602001808311611aee57829003601f168201915b50505050509050611b17565b919050565b6001600050602052806000526040600020600091509050806000016000509080600101600050908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16905084565b6000611b78336112ec565b1515611b875760009050611d56565b611b90836118e2565b1515611b9f5760009050611d56565b81600360005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005084604051808280519060200190808383829060006004602084601f0104600302600f01f1509050019150509081526020016040518091039020600050541015611c215760009050611d56565b3373ffffffffffffffffffffffffffffffffffffffff167f809ecc34526dde62cd18e078ca7a02a7affc5ae617f80e8ddb1acb83c11ffe97848460405180806020018381526020018281038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015611cc15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a281600360005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005084604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050908152602001604051809103902060008282825054039250508190555060019050611d56565b92915050565b6000600160005060008373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160019054906101000a900460ff169050611da5565b919050565b6000611db5336112ec565b1515611dc45760009050612049565b611dcd836118e2565b1515611ddc5760009050612049565b81600360005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005084604051808280519060200190808383829060006004602084601f0104600302600f01f1509050019150509081526020016040518091039020600050541015611e5e5760009050612049565b611e6784611d5c565b1515611e7857611e768461099c565b505b81600360005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005084604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050908152602001604051809103902060008282825054039250508190555081600360005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005084604051808280519060200190808383829060006004602084601f0104600302600f01f15090500191505090815260200160405180910390206000828282505401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7a8fe3491bfb709fe7a49ba5220e002bb8d0bbd13af7e0fa32bef461edd79a6484868560405180806020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281038252858181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156120315780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a260019050612049565b939250505056', 
//      gas: 4700000
//    }, function (e, contract){
//     console.log(e, contract);
//     if (typeof contract.address !== 'undefined') {
//          console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
//     }
//  })

// goldsmartcontractbank.createUser.sendTransaction(eth.accounts[1], "hrishi", "some metadata",
//  	{from: eth.accounts[0],	
//   	gas: 3500000
// 	})

// goldsmartcontractbank.getUserInfo(eth.accounts[1])

// goldsmartcontractbank.createNewInstrument.sendTransaction("Gold_10G", "some gold metadata",
//  	{from: eth.accounts[0],	
//   	gas: 3500000
// 	})

// goldsmartcontractbank.getInstrumentInfo("Gold_10G")

// goldsmartcontractbank.depositNewGNC.sendTransaction(eth.accounts[1], "Gold_10G", 100,
//  	{from: eth.accounts[0],	
//   	gas: 3500000
// 	})

// goldsmartcontractbank.getBalance(eth.accounts[1], "Gold_10G")
// goldsmartcontractbank.transfer.sendTransaction(eth.accounts[0], "Gold_10G", 10, {from: eth.accounts[1],	
//   	gas: 3500000
// 	})

// goldsmartcontractbank.burn.sendTransaction("Gold_10G", 10, {from: eth.accounts[1],	
//   	gas: 3500000
// 	})

